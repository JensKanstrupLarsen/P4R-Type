// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4data

@SerialVersionUID(0L)
final case class P4Data(
    data: p4.v1.p4data.P4Data.Data = p4.v1.p4data.P4Data.Data.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[P4Data] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (data.bitstring.isDefined) {
        val __value = data.bitstring.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
      };
      if (data.varbit.isDefined) {
        val __value = data.varbit.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.bool.isDefined) {
        val __value = data.bool.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
      };
      if (data.tuple.isDefined) {
        val __value = data.tuple.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.struct.isDefined) {
        val __value = data.struct.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.header.isDefined) {
        val __value = data.header.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.headerUnion.isDefined) {
        val __value = data.headerUnion.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.headerStack.isDefined) {
        val __value = data.headerStack.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.headerUnionStack.isDefined) {
        val __value = data.headerUnionStack.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (data.`enum`.isDefined) {
        val __value = data.`enum`.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
      };
      if (data.error.isDefined) {
        val __value = data.error.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
      };
      if (data.enumValue.isDefined) {
        val __value = data.enumValue.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(12, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      data.bitstring.foreach { __v =>
        val __m = __v
        _output__.writeBytes(1, __m)
      };
      data.varbit.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.bool.foreach { __v =>
        val __m = __v
        _output__.writeBool(3, __m)
      };
      data.tuple.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.struct.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.header.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.headerUnion.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.headerStack.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.headerUnionStack.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      data.`enum`.foreach { __v =>
        val __m = __v
        _output__.writeString(10, __m)
      };
      data.error.foreach { __v =>
        val __m = __v
        _output__.writeString(11, __m)
      };
      data.enumValue.foreach { __v =>
        val __m = __v
        _output__.writeBytes(12, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getBitstring: _root_.com.google.protobuf.ByteString = data.bitstring.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withBitstring(__v: _root_.com.google.protobuf.ByteString): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Bitstring(__v))
    def getVarbit: p4.v1.p4data.P4Varbit = data.varbit.getOrElse(p4.v1.p4data.P4Varbit.defaultInstance)
    def withVarbit(__v: p4.v1.p4data.P4Varbit): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Varbit(__v))
    def getBool: _root_.scala.Boolean = data.bool.getOrElse(false)
    def withBool(__v: _root_.scala.Boolean): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Bool(__v))
    def getTuple: p4.v1.p4data.P4StructLike = data.tuple.getOrElse(p4.v1.p4data.P4StructLike.defaultInstance)
    def withTuple(__v: p4.v1.p4data.P4StructLike): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Tuple(__v))
    def getStruct: p4.v1.p4data.P4StructLike = data.struct.getOrElse(p4.v1.p4data.P4StructLike.defaultInstance)
    def withStruct(__v: p4.v1.p4data.P4StructLike): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Struct(__v))
    def getHeader: p4.v1.p4data.P4Header = data.header.getOrElse(p4.v1.p4data.P4Header.defaultInstance)
    def withHeader(__v: p4.v1.p4data.P4Header): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Header(__v))
    def getHeaderUnion: p4.v1.p4data.P4HeaderUnion = data.headerUnion.getOrElse(p4.v1.p4data.P4HeaderUnion.defaultInstance)
    def withHeaderUnion(__v: p4.v1.p4data.P4HeaderUnion): P4Data = copy(data = p4.v1.p4data.P4Data.Data.HeaderUnion(__v))
    def getHeaderStack: p4.v1.p4data.P4HeaderStack = data.headerStack.getOrElse(p4.v1.p4data.P4HeaderStack.defaultInstance)
    def withHeaderStack(__v: p4.v1.p4data.P4HeaderStack): P4Data = copy(data = p4.v1.p4data.P4Data.Data.HeaderStack(__v))
    def getHeaderUnionStack: p4.v1.p4data.P4HeaderUnionStack = data.headerUnionStack.getOrElse(p4.v1.p4data.P4HeaderUnionStack.defaultInstance)
    def withHeaderUnionStack(__v: p4.v1.p4data.P4HeaderUnionStack): P4Data = copy(data = p4.v1.p4data.P4Data.Data.HeaderUnionStack(__v))
    def getEnum: _root_.scala.Predef.String = data.`enum`.getOrElse("")
    def withEnum(__v: _root_.scala.Predef.String): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Enum(__v))
    def getError: _root_.scala.Predef.String = data.error.getOrElse("")
    def withError(__v: _root_.scala.Predef.String): P4Data = copy(data = p4.v1.p4data.P4Data.Data.Error(__v))
    def getEnumValue: _root_.com.google.protobuf.ByteString = data.enumValue.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withEnumValue(__v: _root_.com.google.protobuf.ByteString): P4Data = copy(data = p4.v1.p4data.P4Data.Data.EnumValue(__v))
    def clearData: P4Data = copy(data = p4.v1.p4data.P4Data.Data.Empty)
    def withData(__v: p4.v1.p4data.P4Data.Data): P4Data = copy(data = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => data.bitstring.orNull
        case 2 => data.varbit.orNull
        case 3 => data.bool.orNull
        case 4 => data.tuple.orNull
        case 5 => data.struct.orNull
        case 6 => data.header.orNull
        case 7 => data.headerUnion.orNull
        case 8 => data.headerStack.orNull
        case 9 => data.headerUnionStack.orNull
        case 10 => data.`enum`.orNull
        case 11 => data.error.orNull
        case 12 => data.enumValue.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => data.bitstring.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => data.varbit.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => data.bool.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => data.tuple.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => data.struct.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => data.header.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => data.headerUnion.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => data.headerStack.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => data.headerUnionStack.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => data.`enum`.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => data.error.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => data.enumValue.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4data.P4Data.type = p4.v1.p4data.P4Data
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.P4Data])
}

object P4Data extends scalapb.GeneratedMessageCompanion[p4.v1.p4data.P4Data] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4data.P4Data] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4data.P4Data = {
    var __data: p4.v1.p4data.P4Data.Data = p4.v1.p4data.P4Data.Data.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __data = p4.v1.p4data.P4Data.Data.Bitstring(_input__.readBytes())
        case 18 =>
          __data = p4.v1.p4data.P4Data.Data.Varbit(__data.varbit.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4data.P4Varbit](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __data = p4.v1.p4data.P4Data.Data.Bool(_input__.readBool())
        case 34 =>
          __data = p4.v1.p4data.P4Data.Data.Tuple(__data.tuple.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4data.P4StructLike](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __data = p4.v1.p4data.P4Data.Data.Struct(__data.struct.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4data.P4StructLike](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __data = p4.v1.p4data.P4Data.Data.Header(__data.header.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4data.P4Header](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __data = p4.v1.p4data.P4Data.Data.HeaderUnion(__data.headerUnion.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4data.P4HeaderUnion](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __data = p4.v1.p4data.P4Data.Data.HeaderStack(__data.headerStack.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4data.P4HeaderStack](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __data = p4.v1.p4data.P4Data.Data.HeaderUnionStack(__data.headerUnionStack.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4data.P4HeaderUnionStack](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __data = p4.v1.p4data.P4Data.Data.Enum(_input__.readStringRequireUtf8())
        case 90 =>
          __data = p4.v1.p4data.P4Data.Data.Error(_input__.readStringRequireUtf8())
        case 98 =>
          __data = p4.v1.p4data.P4Data.Data.EnumValue(_input__.readBytes())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4data.P4Data(
        data = __data,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4data.P4Data] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4data.P4Data(
        data = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(p4.v1.p4data.P4Data.Data.Bitstring(_))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4data.P4Varbit]]).map(p4.v1.p4data.P4Data.Data.Varbit(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(p4.v1.p4data.P4Data.Data.Bool(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4data.P4StructLike]]).map(p4.v1.p4data.P4Data.Data.Tuple(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4data.P4StructLike]]).map(p4.v1.p4data.P4Data.Data.Struct(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4data.P4Header]]).map(p4.v1.p4data.P4Data.Data.Header(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4data.P4HeaderUnion]]).map(p4.v1.p4data.P4Data.Data.HeaderUnion(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4data.P4HeaderStack]]).map(p4.v1.p4data.P4Data.Data.HeaderStack(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4data.P4HeaderUnionStack]]).map(p4.v1.p4data.P4Data.Data.HeaderUnionStack(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(p4.v1.p4data.P4Data.Data.Enum(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(p4.v1.p4data.P4Data.Data.Error(_)))
            .orElse[p4.v1.p4data.P4Data.Data](__fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(p4.v1.p4data.P4Data.Data.EnumValue(_)))
            .getOrElse(p4.v1.p4data.P4Data.Data.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4DataProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4DataProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = p4.v1.p4data.P4Varbit
      case 4 => __out = p4.v1.p4data.P4StructLike
      case 5 => __out = p4.v1.p4data.P4StructLike
      case 6 => __out = p4.v1.p4data.P4Header
      case 7 => __out = p4.v1.p4data.P4HeaderUnion
      case 8 => __out = p4.v1.p4data.P4HeaderStack
      case 9 => __out = p4.v1.p4data.P4HeaderUnionStack
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.v1.p4data.P4Data(
    data = p4.v1.p4data.P4Data.Data.Empty
  )
  sealed trait Data extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isBitstring: _root_.scala.Boolean = false
    def isVarbit: _root_.scala.Boolean = false
    def isBool: _root_.scala.Boolean = false
    def isTuple: _root_.scala.Boolean = false
    def isStruct: _root_.scala.Boolean = false
    def isHeader: _root_.scala.Boolean = false
    def isHeaderUnion: _root_.scala.Boolean = false
    def isHeaderStack: _root_.scala.Boolean = false
    def isHeaderUnionStack: _root_.scala.Boolean = false
    def isEnum: _root_.scala.Boolean = false
    def isError: _root_.scala.Boolean = false
    def isEnumValue: _root_.scala.Boolean = false
    def bitstring: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    def varbit: _root_.scala.Option[p4.v1.p4data.P4Varbit] = _root_.scala.None
    def bool: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def tuple: _root_.scala.Option[p4.v1.p4data.P4StructLike] = _root_.scala.None
    def struct: _root_.scala.Option[p4.v1.p4data.P4StructLike] = _root_.scala.None
    def header: _root_.scala.Option[p4.v1.p4data.P4Header] = _root_.scala.None
    def headerUnion: _root_.scala.Option[p4.v1.p4data.P4HeaderUnion] = _root_.scala.None
    def headerStack: _root_.scala.Option[p4.v1.p4data.P4HeaderStack] = _root_.scala.None
    def headerUnionStack: _root_.scala.Option[p4.v1.p4data.P4HeaderUnionStack] = _root_.scala.None
    def `enum`: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def error: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def enumValue: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
  }
  object Data {
    @SerialVersionUID(0L)
    case object Empty extends p4.v1.p4data.P4Data.Data {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Bitstring(value: _root_.com.google.protobuf.ByteString) extends p4.v1.p4data.P4Data.Data {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isBitstring: _root_.scala.Boolean = true
      override def bitstring: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Varbit(value: p4.v1.p4data.P4Varbit) extends p4.v1.p4data.P4Data.Data {
      type ValueType = p4.v1.p4data.P4Varbit
      override def isVarbit: _root_.scala.Boolean = true
      override def varbit: _root_.scala.Option[p4.v1.p4data.P4Varbit] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class Bool(value: _root_.scala.Boolean) extends p4.v1.p4data.P4Data.Data {
      type ValueType = _root_.scala.Boolean
      override def isBool: _root_.scala.Boolean = true
      override def bool: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class Tuple(value: p4.v1.p4data.P4StructLike) extends p4.v1.p4data.P4Data.Data {
      type ValueType = p4.v1.p4data.P4StructLike
      override def isTuple: _root_.scala.Boolean = true
      override def tuple: _root_.scala.Option[p4.v1.p4data.P4StructLike] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Struct(value: p4.v1.p4data.P4StructLike) extends p4.v1.p4data.P4Data.Data {
      type ValueType = p4.v1.p4data.P4StructLike
      override def isStruct: _root_.scala.Boolean = true
      override def struct: _root_.scala.Option[p4.v1.p4data.P4StructLike] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class Header(value: p4.v1.p4data.P4Header) extends p4.v1.p4data.P4Data.Data {
      type ValueType = p4.v1.p4data.P4Header
      override def isHeader: _root_.scala.Boolean = true
      override def header: _root_.scala.Option[p4.v1.p4data.P4Header] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class HeaderUnion(value: p4.v1.p4data.P4HeaderUnion) extends p4.v1.p4data.P4Data.Data {
      type ValueType = p4.v1.p4data.P4HeaderUnion
      override def isHeaderUnion: _root_.scala.Boolean = true
      override def headerUnion: _root_.scala.Option[p4.v1.p4data.P4HeaderUnion] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class HeaderStack(value: p4.v1.p4data.P4HeaderStack) extends p4.v1.p4data.P4Data.Data {
      type ValueType = p4.v1.p4data.P4HeaderStack
      override def isHeaderStack: _root_.scala.Boolean = true
      override def headerStack: _root_.scala.Option[p4.v1.p4data.P4HeaderStack] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class HeaderUnionStack(value: p4.v1.p4data.P4HeaderUnionStack) extends p4.v1.p4data.P4Data.Data {
      type ValueType = p4.v1.p4data.P4HeaderUnionStack
      override def isHeaderUnionStack: _root_.scala.Boolean = true
      override def headerUnionStack: _root_.scala.Option[p4.v1.p4data.P4HeaderUnionStack] = Some(value)
      override def number: _root_.scala.Int = 9
    }
    @SerialVersionUID(0L)
    final case class Enum(value: _root_.scala.Predef.String) extends p4.v1.p4data.P4Data.Data {
      type ValueType = _root_.scala.Predef.String
      override def isEnum: _root_.scala.Boolean = true
      override def `enum`: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 10
    }
    @SerialVersionUID(0L)
    final case class Error(value: _root_.scala.Predef.String) extends p4.v1.p4data.P4Data.Data {
      type ValueType = _root_.scala.Predef.String
      override def isError: _root_.scala.Boolean = true
      override def error: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 11
    }
    @SerialVersionUID(0L)
    final case class EnumValue(value: _root_.com.google.protobuf.ByteString) extends p4.v1.p4data.P4Data.Data {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isEnumValue: _root_.scala.Boolean = true
      override def enumValue: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 12
    }
  }
  implicit class P4DataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4Data]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4data.P4Data](_l) {
    def bitstring: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getBitstring)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Bitstring(f_)))
    def varbit: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4Varbit] = field(_.getVarbit)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Varbit(f_)))
    def bool: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getBool)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Bool(f_)))
    def tuple: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4StructLike] = field(_.getTuple)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Tuple(f_)))
    def struct: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4StructLike] = field(_.getStruct)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Struct(f_)))
    def header: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4Header] = field(_.getHeader)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Header(f_)))
    def headerUnion: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4HeaderUnion] = field(_.getHeaderUnion)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.HeaderUnion(f_)))
    def headerStack: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4HeaderStack] = field(_.getHeaderStack)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.HeaderStack(f_)))
    def headerUnionStack: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4HeaderUnionStack] = field(_.getHeaderUnionStack)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.HeaderUnionStack(f_)))
    def `enum`: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getEnum)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Enum(f_)))
    def error: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getError)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.Error(f_)))
    def enumValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getEnumValue)((c_, f_) => c_.copy(data = p4.v1.p4data.P4Data.Data.EnumValue(f_)))
    def data: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4data.P4Data.Data] = field(_.data)((c_, f_) => c_.copy(data = f_))
  }
  final val BITSTRING_FIELD_NUMBER = 1
  final val VARBIT_FIELD_NUMBER = 2
  final val BOOL_FIELD_NUMBER = 3
  final val TUPLE_FIELD_NUMBER = 4
  final val STRUCT_FIELD_NUMBER = 5
  final val HEADER_FIELD_NUMBER = 6
  final val HEADER_UNION_FIELD_NUMBER = 7
  final val HEADER_STACK_FIELD_NUMBER = 8
  final val HEADER_UNION_STACK_FIELD_NUMBER = 9
  final val ENUM_FIELD_NUMBER = 10
  final val ERROR_FIELD_NUMBER = 11
  final val ENUM_VALUE_FIELD_NUMBER = 12
  def of(
    data: p4.v1.p4data.P4Data.Data
  ): _root_.p4.v1.p4data.P4Data = _root_.p4.v1.p4data.P4Data(
    data
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.P4Data])
}
