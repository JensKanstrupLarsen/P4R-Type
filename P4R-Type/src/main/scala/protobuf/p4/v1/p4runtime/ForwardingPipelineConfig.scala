// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4runtime

/** @param p4DeviceConfig
  *   Target-specific P4 configuration.
  */
@SerialVersionUID(0L)
final case class ForwardingPipelineConfig(
    p4Info: _root_.scala.Option[p4.config.v1.p4info.P4Info] = _root_.scala.None,
    p4DeviceConfig: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    cookie: _root_.scala.Option[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ForwardingPipelineConfig] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (p4Info.isDefined) {
        val __value = p4Info.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = p4DeviceConfig
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      if (cookie.isDefined) {
        val __value = cookie.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      p4Info.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = p4DeviceConfig
        if (!__v.isEmpty) {
          _output__.writeBytes(2, __v)
        }
      };
      cookie.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getP4Info: p4.config.v1.p4info.P4Info = p4Info.getOrElse(p4.config.v1.p4info.P4Info.defaultInstance)
    def clearP4Info: ForwardingPipelineConfig = copy(p4Info = _root_.scala.None)
    def withP4Info(__v: p4.config.v1.p4info.P4Info): ForwardingPipelineConfig = copy(p4Info = Option(__v))
    def withP4DeviceConfig(__v: _root_.com.google.protobuf.ByteString): ForwardingPipelineConfig = copy(p4DeviceConfig = __v)
    def getCookie: p4.v1.p4runtime.ForwardingPipelineConfig.Cookie = cookie.getOrElse(p4.v1.p4runtime.ForwardingPipelineConfig.Cookie.defaultInstance)
    def clearCookie: ForwardingPipelineConfig = copy(cookie = _root_.scala.None)
    def withCookie(__v: p4.v1.p4runtime.ForwardingPipelineConfig.Cookie): ForwardingPipelineConfig = copy(cookie = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => p4Info.orNull
        case 2 => {
          val __t = p4DeviceConfig
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => cookie.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => p4Info.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PByteString(p4DeviceConfig)
        case 3 => cookie.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4runtime.ForwardingPipelineConfig.type = p4.v1.p4runtime.ForwardingPipelineConfig
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.ForwardingPipelineConfig])
}

object ForwardingPipelineConfig extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.ForwardingPipelineConfig] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.ForwardingPipelineConfig] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.ForwardingPipelineConfig = {
    var __p4Info: _root_.scala.Option[p4.config.v1.p4info.P4Info] = _root_.scala.None
    var __p4DeviceConfig: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __cookie: _root_.scala.Option[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __p4Info = Option(__p4Info.fold(_root_.scalapb.LiteParser.readMessage[p4.config.v1.p4info.P4Info](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __p4DeviceConfig = _input__.readBytes()
        case 26 =>
          __cookie = Option(__cookie.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4runtime.ForwardingPipelineConfig(
        p4Info = __p4Info,
        p4DeviceConfig = __p4DeviceConfig,
        cookie = __cookie,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.ForwardingPipelineConfig] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4runtime.ForwardingPipelineConfig(
        p4Info = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[p4.config.v1.p4info.P4Info]]),
        p4DeviceConfig = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        cookie = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4RuntimeProto.javaDescriptor.getMessageTypes().get(48)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4RuntimeProto.scalaDescriptor.messages(48)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = p4.config.v1.p4info.P4Info
      case 3 => __out = p4.v1.p4runtime.ForwardingPipelineConfig.Cookie
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.p4.v1.p4runtime.ForwardingPipelineConfig.Cookie
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.v1.p4runtime.ForwardingPipelineConfig(
    p4Info = _root_.scala.None,
    p4DeviceConfig = _root_.com.google.protobuf.ByteString.EMPTY,
    cookie = _root_.scala.None
  )
  /** Metadata (cookie) opaque to the target. A control plane may use this field
    * to uniquely identify this config. There are no restrictions on how such
    * value is computed, or where this is stored on the target, as long as it is
    * returned with a GetForwardingPipelineConfig RPC. When reading the cookie,
    * we need to distinguish those cases where a cookie is NOT present (e.g. not
    * set in the SetForwardingPipelineConfigRequest, therefore we wrap the actual
    * uint64 value in a protobuf message.
    */
  @SerialVersionUID(0L)
  final case class Cookie(
      cookie: _root_.scala.Long = 0L,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Cookie] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = cookie
          if (__value != 0L) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = cookie
          if (__v != 0L) {
            _output__.writeUInt64(1, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withCookie(__v: _root_.scala.Long): Cookie = copy(cookie = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = cookie
            if (__t != 0L) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PLong(cookie)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: p4.v1.p4runtime.ForwardingPipelineConfig.Cookie.type = p4.v1.p4runtime.ForwardingPipelineConfig.Cookie
      // @@protoc_insertion_point(GeneratedMessage[p4.v1.ForwardingPipelineConfig.Cookie])
  }
  
  object Cookie extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.ForwardingPipelineConfig.Cookie = {
      var __cookie: _root_.scala.Long = 0L
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __cookie = _input__.readUInt64()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      p4.v1.p4runtime.ForwardingPipelineConfig.Cookie(
          cookie = __cookie,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        p4.v1.p4runtime.ForwardingPipelineConfig.Cookie(
          cookie = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = p4.v1.p4runtime.ForwardingPipelineConfig.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = p4.v1.p4runtime.ForwardingPipelineConfig.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = p4.v1.p4runtime.ForwardingPipelineConfig.Cookie(
      cookie = 0L
    )
    implicit class CookieLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.ForwardingPipelineConfig.Cookie]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.ForwardingPipelineConfig.Cookie](_l) {
      def cookie: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.cookie)((c_, f_) => c_.copy(cookie = f_))
    }
    final val COOKIE_FIELD_NUMBER = 1
    def of(
      cookie: _root_.scala.Long
    ): _root_.p4.v1.p4runtime.ForwardingPipelineConfig.Cookie = _root_.p4.v1.p4runtime.ForwardingPipelineConfig.Cookie(
      cookie
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.ForwardingPipelineConfig.Cookie])
  }
  
  implicit class ForwardingPipelineConfigLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.ForwardingPipelineConfig]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.ForwardingPipelineConfig](_l) {
    def p4Info: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4info.P4Info] = field(_.getP4Info)((c_, f_) => c_.copy(p4Info = Option(f_)))
    def optionalP4Info: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[p4.config.v1.p4info.P4Info]] = field(_.p4Info)((c_, f_) => c_.copy(p4Info = f_))
    def p4DeviceConfig: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.p4DeviceConfig)((c_, f_) => c_.copy(p4DeviceConfig = f_))
    def cookie: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.ForwardingPipelineConfig.Cookie] = field(_.getCookie)((c_, f_) => c_.copy(cookie = Option(f_)))
    def optionalCookie: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie]] = field(_.cookie)((c_, f_) => c_.copy(cookie = f_))
  }
  final val P4INFO_FIELD_NUMBER = 1
  final val P4_DEVICE_CONFIG_FIELD_NUMBER = 2
  final val COOKIE_FIELD_NUMBER = 3
  def of(
    p4Info: _root_.scala.Option[p4.config.v1.p4info.P4Info],
    p4DeviceConfig: _root_.com.google.protobuf.ByteString,
    cookie: _root_.scala.Option[p4.v1.p4runtime.ForwardingPipelineConfig.Cookie]
  ): _root_.p4.v1.p4runtime.ForwardingPipelineConfig = _root_.p4.v1.p4runtime.ForwardingPipelineConfig(
    p4Info,
    p4DeviceConfig,
    cookie
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.ForwardingPipelineConfig])
}
