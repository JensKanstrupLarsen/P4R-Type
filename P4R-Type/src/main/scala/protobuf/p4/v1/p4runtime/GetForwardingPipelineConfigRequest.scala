// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4runtime

@SerialVersionUID(0L)
final case class GetForwardingPipelineConfigRequest(
    deviceId: _root_.scala.Long = 0L,
    responseType: p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.ALL,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetForwardingPipelineConfigRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = deviceId
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = responseType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = deviceId
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = responseType.value
        if (__v != 0) {
          _output__.writeEnum(2, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withDeviceId(__v: _root_.scala.Long): GetForwardingPipelineConfigRequest = copy(deviceId = __v)
    def withResponseType(__v: p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType): GetForwardingPipelineConfigRequest = copy(responseType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = deviceId
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = responseType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(deviceId)
        case 2 => _root_.scalapb.descriptors.PEnum(responseType.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4runtime.GetForwardingPipelineConfigRequest.type = p4.v1.p4runtime.GetForwardingPipelineConfigRequest
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.GetForwardingPipelineConfigRequest])
}

object GetForwardingPipelineConfigRequest extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.GetForwardingPipelineConfigRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.GetForwardingPipelineConfigRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.GetForwardingPipelineConfigRequest = {
    var __deviceId: _root_.scala.Long = 0L
    var __responseType: p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.ALL
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __deviceId = _input__.readUInt64()
        case 16 =>
          __responseType = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4runtime.GetForwardingPipelineConfigRequest(
        deviceId = __deviceId,
        responseType = __responseType,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.GetForwardingPipelineConfigRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4runtime.GetForwardingPipelineConfigRequest(
        deviceId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        responseType = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.ALL.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4RuntimeProto.javaDescriptor.getMessageTypes().get(49)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4RuntimeProto.scalaDescriptor.messages(49)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType
    }
  }
  lazy val defaultInstance = p4.v1.p4runtime.GetForwardingPipelineConfigRequest(
    deviceId = 0L,
    responseType = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.ALL
  )
  /** Specifies the fields to populate in the response.
    */
  sealed abstract class ResponseType(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = ResponseType
    def isAll: _root_.scala.Boolean = false
    def isCookieOnly: _root_.scala.Boolean = false
    def isP4InfoAndCookie: _root_.scala.Boolean = false
    def isDeviceConfigAndCookie: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[ResponseType] = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType
    final def asRecognized: _root_.scala.Option[p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType.Recognized])
  }
  
  object ResponseType extends _root_.scalapb.GeneratedEnumCompanion[ResponseType] {
    sealed trait Recognized extends ResponseType
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[ResponseType] = this
    
    /** Default behaviour. Returns a ForwardingPipelineConfig with all fields set
      * as stored by the target.
      */
    @SerialVersionUID(0L)
    case object ALL extends ResponseType(0) with ResponseType.Recognized {
      val index = 0
      val name = "ALL"
      override def isAll: _root_.scala.Boolean = true
    }
    
    /** Reply by setting only the cookie field, omitting all other fields.
      */
    @SerialVersionUID(0L)
    case object COOKIE_ONLY extends ResponseType(1) with ResponseType.Recognized {
      val index = 1
      val name = "COOKIE_ONLY"
      override def isCookieOnly: _root_.scala.Boolean = true
    }
    
    /** Reply by setting the p4info and cookie fields.
      */
    @SerialVersionUID(0L)
    case object P4INFO_AND_COOKIE extends ResponseType(2) with ResponseType.Recognized {
      val index = 2
      val name = "P4INFO_AND_COOKIE"
      override def isP4InfoAndCookie: _root_.scala.Boolean = true
    }
    
    /** Reply by setting the p4_device_config and cookie fields.
      */
    @SerialVersionUID(0L)
    case object DEVICE_CONFIG_AND_COOKIE extends ResponseType(3) with ResponseType.Recognized {
      val index = 3
      val name = "DEVICE_CONFIG_AND_COOKIE"
      override def isDeviceConfigAndCookie: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends ResponseType(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values = scala.collection.immutable.Seq(ALL, COOKIE_ONLY, P4INFO_AND_COOKIE, DEVICE_CONFIG_AND_COOKIE)
    def fromValue(__value: _root_.scala.Int): ResponseType = __value match {
      case 0 => ALL
      case 1 => COOKIE_ONLY
      case 2 => P4INFO_AND_COOKIE
      case 3 => DEVICE_CONFIG_AND_COOKIE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = p4.v1.p4runtime.GetForwardingPipelineConfigRequest.scalaDescriptor.enums(0)
  }
  implicit class GetForwardingPipelineConfigRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.GetForwardingPipelineConfigRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.GetForwardingPipelineConfigRequest](_l) {
    def deviceId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.deviceId)((c_, f_) => c_.copy(deviceId = f_))
    def responseType: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType] = field(_.responseType)((c_, f_) => c_.copy(responseType = f_))
  }
  final val DEVICE_ID_FIELD_NUMBER = 1
  final val RESPONSE_TYPE_FIELD_NUMBER = 2
  def of(
    deviceId: _root_.scala.Long,
    responseType: p4.v1.p4runtime.GetForwardingPipelineConfigRequest.ResponseType
  ): _root_.p4.v1.p4runtime.GetForwardingPipelineConfigRequest = _root_.p4.v1.p4runtime.GetForwardingPipelineConfigRequest(
    deviceId,
    responseType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.GetForwardingPipelineConfigRequest])
}
