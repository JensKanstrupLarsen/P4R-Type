// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4runtime

/** A packet may be cloned by setting the clone_session_id field of PSA
  * ingress/egress output metadata to session_id of a programmed clone session
  * entry. Multiple clones may be created via a single clone session entry by
  * using the replicas message. The clones may be distinguished in the egress
  * using the instance field. The class_of_service field of the clone's egress
  * input metadata will be set to the respective value programmed in the clone
  * session entry. Note that in case of multiple clones, all clones, defined
  * for a clone session, will get the same class of service. The
  * packet_length_bytes field must be set to a non-zero value if the clone
  * packet(s) should be truncated to the given value (in bytes). The packet
  * length is also common to all clones in the clone session. If the
  * packet_length_bytes field is 0, no truncation on the clone(s) will be
  * performed.
  */
@SerialVersionUID(0L)
final case class CloneSessionEntry(
    sessionId: _root_.scala.Int = 0,
    replicas: _root_.scala.Seq[p4.v1.p4runtime.Replica] = _root_.scala.Seq.empty,
    classOfService: _root_.scala.Int = 0,
    packetLengthBytes: _root_.scala.Int = 0,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CloneSessionEntry] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = sessionId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
        }
      };
      replicas.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = classOfService
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, __value)
        }
      };
      
      {
        val __value = packetLengthBytes
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = sessionId
        if (__v != 0) {
          _output__.writeUInt32(1, __v)
        }
      };
      replicas.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = classOfService
        if (__v != 0) {
          _output__.writeUInt32(3, __v)
        }
      };
      {
        val __v = packetLengthBytes
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withSessionId(__v: _root_.scala.Int): CloneSessionEntry = copy(sessionId = __v)
    def clearReplicas = copy(replicas = _root_.scala.Seq.empty)
    def addReplicas(__vs: p4.v1.p4runtime.Replica *): CloneSessionEntry = addAllReplicas(__vs)
    def addAllReplicas(__vs: Iterable[p4.v1.p4runtime.Replica]): CloneSessionEntry = copy(replicas = replicas ++ __vs)
    def withReplicas(__v: _root_.scala.Seq[p4.v1.p4runtime.Replica]): CloneSessionEntry = copy(replicas = __v)
    def withClassOfService(__v: _root_.scala.Int): CloneSessionEntry = copy(classOfService = __v)
    def withPacketLengthBytes(__v: _root_.scala.Int): CloneSessionEntry = copy(packetLengthBytes = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = sessionId
          if (__t != 0) __t else null
        }
        case 2 => replicas
        case 3 => {
          val __t = classOfService
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = packetLengthBytes
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(sessionId)
        case 2 => _root_.scalapb.descriptors.PRepeated(replicas.iterator.map(_.toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PInt(classOfService)
        case 4 => _root_.scalapb.descriptors.PInt(packetLengthBytes)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4runtime.CloneSessionEntry.type = p4.v1.p4runtime.CloneSessionEntry
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.CloneSessionEntry])
}

object CloneSessionEntry extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.CloneSessionEntry] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.CloneSessionEntry] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.CloneSessionEntry = {
    var __sessionId: _root_.scala.Int = 0
    val __replicas: _root_.scala.collection.immutable.VectorBuilder[p4.v1.p4runtime.Replica] = new _root_.scala.collection.immutable.VectorBuilder[p4.v1.p4runtime.Replica]
    var __classOfService: _root_.scala.Int = 0
    var __packetLengthBytes: _root_.scala.Int = 0
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __sessionId = _input__.readUInt32()
        case 18 =>
          __replicas += _root_.scalapb.LiteParser.readMessage[p4.v1.p4runtime.Replica](_input__)
        case 24 =>
          __classOfService = _input__.readUInt32()
        case 32 =>
          __packetLengthBytes = _input__.readInt32()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4runtime.CloneSessionEntry(
        sessionId = __sessionId,
        replicas = __replicas.result(),
        classOfService = __classOfService,
        packetLengthBytes = __packetLengthBytes,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.CloneSessionEntry] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4runtime.CloneSessionEntry(
        sessionId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        replicas = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[p4.v1.p4runtime.Replica]]).getOrElse(_root_.scala.Seq.empty),
        classOfService = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        packetLengthBytes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4RuntimeProto.javaDescriptor.getMessageTypes().get(26)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4RuntimeProto.scalaDescriptor.messages(26)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = p4.v1.p4runtime.Replica
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.v1.p4runtime.CloneSessionEntry(
    sessionId = 0,
    replicas = _root_.scala.Seq.empty,
    classOfService = 0,
    packetLengthBytes = 0
  )
  implicit class CloneSessionEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.CloneSessionEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.CloneSessionEntry](_l) {
    def sessionId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.sessionId)((c_, f_) => c_.copy(sessionId = f_))
    def replicas: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[p4.v1.p4runtime.Replica]] = field(_.replicas)((c_, f_) => c_.copy(replicas = f_))
    def classOfService: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.classOfService)((c_, f_) => c_.copy(classOfService = f_))
    def packetLengthBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.packetLengthBytes)((c_, f_) => c_.copy(packetLengthBytes = f_))
  }
  final val SESSION_ID_FIELD_NUMBER = 1
  final val REPLICAS_FIELD_NUMBER = 2
  final val CLASS_OF_SERVICE_FIELD_NUMBER = 3
  final val PACKET_LENGTH_BYTES_FIELD_NUMBER = 4
  def of(
    sessionId: _root_.scala.Int,
    replicas: _root_.scala.Seq[p4.v1.p4runtime.Replica],
    classOfService: _root_.scala.Int,
    packetLengthBytes: _root_.scala.Int
  ): _root_.p4.v1.p4runtime.CloneSessionEntry = _root_.p4.v1.p4runtime.CloneSessionEntry(
    sessionId,
    replicas,
    classOfService,
    packetLengthBytes
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.CloneSessionEntry])
}
