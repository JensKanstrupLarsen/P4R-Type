// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4runtime

/** ------------------------------------------------------------------------------
  * Only one instance of a Packet Replication Engine (PRE) is expected in the
  * P4 pipeline. Hence, no instance id is needed to access the PRE.
  */
@SerialVersionUID(0L)
final case class PacketReplicationEngineEntry(
    `type`: p4.v1.p4runtime.PacketReplicationEngineEntry.Type = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PacketReplicationEngineEntry] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (`type`.multicastGroupEntry.isDefined) {
        val __value = `type`.multicastGroupEntry.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (`type`.cloneSessionEntry.isDefined) {
        val __value = `type`.cloneSessionEntry.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      `type`.multicastGroupEntry.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      `type`.cloneSessionEntry.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getMulticastGroupEntry: p4.v1.p4runtime.MulticastGroupEntry = `type`.multicastGroupEntry.getOrElse(p4.v1.p4runtime.MulticastGroupEntry.defaultInstance)
    def withMulticastGroupEntry(__v: p4.v1.p4runtime.MulticastGroupEntry): PacketReplicationEngineEntry = copy(`type` = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.MulticastGroupEntry(__v))
    def getCloneSessionEntry: p4.v1.p4runtime.CloneSessionEntry = `type`.cloneSessionEntry.getOrElse(p4.v1.p4runtime.CloneSessionEntry.defaultInstance)
    def withCloneSessionEntry(__v: p4.v1.p4runtime.CloneSessionEntry): PacketReplicationEngineEntry = copy(`type` = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.CloneSessionEntry(__v))
    def clearType: PacketReplicationEngineEntry = copy(`type` = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.Empty)
    def withType(__v: p4.v1.p4runtime.PacketReplicationEngineEntry.Type): PacketReplicationEngineEntry = copy(`type` = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => `type`.multicastGroupEntry.orNull
        case 2 => `type`.cloneSessionEntry.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => `type`.multicastGroupEntry.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => `type`.cloneSessionEntry.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4runtime.PacketReplicationEngineEntry.type = p4.v1.p4runtime.PacketReplicationEngineEntry
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.PacketReplicationEngineEntry])
}

object PacketReplicationEngineEntry extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.PacketReplicationEngineEntry] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.PacketReplicationEngineEntry] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.PacketReplicationEngineEntry = {
    var __type: p4.v1.p4runtime.PacketReplicationEngineEntry.Type = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __type = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.MulticastGroupEntry(__type.multicastGroupEntry.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4runtime.MulticastGroupEntry](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __type = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.CloneSessionEntry(__type.cloneSessionEntry.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4runtime.CloneSessionEntry](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4runtime.PacketReplicationEngineEntry(
        `type` = __type,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.PacketReplicationEngineEntry] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4runtime.PacketReplicationEngineEntry(
        `type` = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4runtime.MulticastGroupEntry]]).map(p4.v1.p4runtime.PacketReplicationEngineEntry.Type.MulticastGroupEntry(_))
            .orElse[p4.v1.p4runtime.PacketReplicationEngineEntry.Type](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4runtime.CloneSessionEntry]]).map(p4.v1.p4runtime.PacketReplicationEngineEntry.Type.CloneSessionEntry(_)))
            .getOrElse(p4.v1.p4runtime.PacketReplicationEngineEntry.Type.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4RuntimeProto.javaDescriptor.getMessageTypes().get(23)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4RuntimeProto.scalaDescriptor.messages(23)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = p4.v1.p4runtime.MulticastGroupEntry
      case 2 => __out = p4.v1.p4runtime.CloneSessionEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.v1.p4runtime.PacketReplicationEngineEntry(
    `type` = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.Empty
  )
  sealed trait Type extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isMulticastGroupEntry: _root_.scala.Boolean = false
    def isCloneSessionEntry: _root_.scala.Boolean = false
    def multicastGroupEntry: _root_.scala.Option[p4.v1.p4runtime.MulticastGroupEntry] = _root_.scala.None
    def cloneSessionEntry: _root_.scala.Option[p4.v1.p4runtime.CloneSessionEntry] = _root_.scala.None
  }
  object Type {
    @SerialVersionUID(0L)
    case object Empty extends p4.v1.p4runtime.PacketReplicationEngineEntry.Type {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class MulticastGroupEntry(value: p4.v1.p4runtime.MulticastGroupEntry) extends p4.v1.p4runtime.PacketReplicationEngineEntry.Type {
      type ValueType = p4.v1.p4runtime.MulticastGroupEntry
      override def isMulticastGroupEntry: _root_.scala.Boolean = true
      override def multicastGroupEntry: _root_.scala.Option[p4.v1.p4runtime.MulticastGroupEntry] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class CloneSessionEntry(value: p4.v1.p4runtime.CloneSessionEntry) extends p4.v1.p4runtime.PacketReplicationEngineEntry.Type {
      type ValueType = p4.v1.p4runtime.CloneSessionEntry
      override def isCloneSessionEntry: _root_.scala.Boolean = true
      override def cloneSessionEntry: _root_.scala.Option[p4.v1.p4runtime.CloneSessionEntry] = Some(value)
      override def number: _root_.scala.Int = 2
    }
  }
  implicit class PacketReplicationEngineEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.PacketReplicationEngineEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.PacketReplicationEngineEntry](_l) {
    def multicastGroupEntry: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.MulticastGroupEntry] = field(_.getMulticastGroupEntry)((c_, f_) => c_.copy(`type` = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.MulticastGroupEntry(f_)))
    def cloneSessionEntry: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.CloneSessionEntry] = field(_.getCloneSessionEntry)((c_, f_) => c_.copy(`type` = p4.v1.p4runtime.PacketReplicationEngineEntry.Type.CloneSessionEntry(f_)))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.PacketReplicationEngineEntry.Type] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val MULTICAST_GROUP_ENTRY_FIELD_NUMBER = 1
  final val CLONE_SESSION_ENTRY_FIELD_NUMBER = 2
  def of(
    `type`: p4.v1.p4runtime.PacketReplicationEngineEntry.Type
  ): _root_.p4.v1.p4runtime.PacketReplicationEngineEntry = _root_.p4.v1.p4runtime.PacketReplicationEngineEntry(
    `type`
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.PacketReplicationEngineEntry])
}
