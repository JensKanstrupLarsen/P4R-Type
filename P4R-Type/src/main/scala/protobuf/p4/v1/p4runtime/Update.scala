// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4runtime

@SerialVersionUID(0L)
final case class Update(
    `type`: p4.v1.p4runtime.Update.Type = p4.v1.p4runtime.Update.Type.UNSPECIFIED,
    entity: _root_.scala.Option[p4.v1.p4runtime.Entity] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Update] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = `type`.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      if (entity.isDefined) {
        val __value = entity.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = `type`.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      entity.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withType(__v: p4.v1.p4runtime.Update.Type): Update = copy(`type` = __v)
    def getEntity: p4.v1.p4runtime.Entity = entity.getOrElse(p4.v1.p4runtime.Entity.defaultInstance)
    def clearEntity: Update = copy(entity = _root_.scala.None)
    def withEntity(__v: p4.v1.p4runtime.Entity): Update = copy(entity = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => entity.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
        case 2 => entity.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4runtime.Update.type = p4.v1.p4runtime.Update
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.Update])
}

object Update extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.Update] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.Update] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.Update = {
    var __type: p4.v1.p4runtime.Update.Type = p4.v1.p4runtime.Update.Type.UNSPECIFIED
    var __entity: _root_.scala.Option[p4.v1.p4runtime.Entity] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __type = p4.v1.p4runtime.Update.Type.fromValue(_input__.readEnum())
        case 18 =>
          __entity = Option(__entity.fold(_root_.scalapb.LiteParser.readMessage[p4.v1.p4runtime.Entity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4runtime.Update(
        `type` = __type,
        entity = __entity,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.Update] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4runtime.Update(
        `type` = p4.v1.p4runtime.Update.Type.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(p4.v1.p4runtime.Update.Type.UNSPECIFIED.scalaValueDescriptor).number),
        entity = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[p4.v1.p4runtime.Entity]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4RuntimeProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4RuntimeProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = p4.v1.p4runtime.Entity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => p4.v1.p4runtime.Update.Type
    }
  }
  lazy val defaultInstance = p4.v1.p4runtime.Update(
    `type` = p4.v1.p4runtime.Update.Type.UNSPECIFIED,
    entity = _root_.scala.None
  )
  sealed abstract class Type(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = Type
    def isUnspecified: _root_.scala.Boolean = false
    def isInsert: _root_.scala.Boolean = false
    def isModify: _root_.scala.Boolean = false
    def isDelete: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Type] = p4.v1.p4runtime.Update.Type
    final def asRecognized: _root_.scala.Option[p4.v1.p4runtime.Update.Type.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[p4.v1.p4runtime.Update.Type.Recognized])
  }
  
  object Type extends _root_.scalapb.GeneratedEnumCompanion[Type] {
    sealed trait Recognized extends Type
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Type] = this
    
    @SerialVersionUID(0L)
    case object UNSPECIFIED extends Type(0) with Type.Recognized {
      val index = 0
      val name = "UNSPECIFIED"
      override def isUnspecified: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object INSERT extends Type(1) with Type.Recognized {
      val index = 1
      val name = "INSERT"
      override def isInsert: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object MODIFY extends Type(2) with Type.Recognized {
      val index = 2
      val name = "MODIFY"
      override def isModify: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DELETE extends Type(3) with Type.Recognized {
      val index = 3
      val name = "DELETE"
      override def isDelete: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Type(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values = scala.collection.immutable.Seq(UNSPECIFIED, INSERT, MODIFY, DELETE)
    def fromValue(__value: _root_.scala.Int): Type = __value match {
      case 0 => UNSPECIFIED
      case 1 => INSERT
      case 2 => MODIFY
      case 3 => DELETE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = p4.v1.p4runtime.Update.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = p4.v1.p4runtime.Update.scalaDescriptor.enums(0)
  }
  implicit class UpdateLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.Update]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.Update](_l) {
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.Update.Type] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def entity: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.Entity] = field(_.getEntity)((c_, f_) => c_.copy(entity = Option(f_)))
    def optionalEntity: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[p4.v1.p4runtime.Entity]] = field(_.entity)((c_, f_) => c_.copy(entity = f_))
  }
  final val TYPE_FIELD_NUMBER = 1
  final val ENTITY_FIELD_NUMBER = 2
  def of(
    `type`: p4.v1.p4runtime.Update.Type,
    entity: _root_.scala.Option[p4.v1.p4runtime.Entity]
  ): _root_.p4.v1.p4runtime.Update = _root_.p4.v1.p4runtime.Update(
    `type`,
    entity
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.Update])
}
