// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4runtime

/** Packet sent from the switch to the controller.
  *
  * @param metadata
  *   This will be based on P4 header annotated as
  *   &#64;controller_header("packet_in").
  *   At most one P4 header can have this annotation.
  */
@SerialVersionUID(0L)
final case class PacketIn(
    payload: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    metadata: _root_.scala.Seq[p4.v1.p4runtime.PacketMetadata] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PacketIn] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = payload
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      metadata.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = payload
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      metadata.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withPayload(__v: _root_.com.google.protobuf.ByteString): PacketIn = copy(payload = __v)
    def clearMetadata = copy(metadata = _root_.scala.Seq.empty)
    def addMetadata(__vs: p4.v1.p4runtime.PacketMetadata *): PacketIn = addAllMetadata(__vs)
    def addAllMetadata(__vs: Iterable[p4.v1.p4runtime.PacketMetadata]): PacketIn = copy(metadata = metadata ++ __vs)
    def withMetadata(__v: _root_.scala.Seq[p4.v1.p4runtime.PacketMetadata]): PacketIn = copy(metadata = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = payload
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => metadata
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(payload)
        case 2 => _root_.scalapb.descriptors.PRepeated(metadata.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4runtime.PacketIn.type = p4.v1.p4runtime.PacketIn
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.PacketIn])
}

object PacketIn extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.PacketIn] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.PacketIn] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.PacketIn = {
    var __payload: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    val __metadata: _root_.scala.collection.immutable.VectorBuilder[p4.v1.p4runtime.PacketMetadata] = new _root_.scala.collection.immutable.VectorBuilder[p4.v1.p4runtime.PacketMetadata]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __payload = _input__.readBytes()
        case 18 =>
          __metadata += _root_.scalapb.LiteParser.readMessage[p4.v1.p4runtime.PacketMetadata](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4runtime.PacketIn(
        payload = __payload,
        metadata = __metadata.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.PacketIn] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4runtime.PacketIn(
        payload = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        metadata = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[p4.v1.p4runtime.PacketMetadata]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4RuntimeProto.javaDescriptor.getMessageTypes().get(35)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4RuntimeProto.scalaDescriptor.messages(35)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = p4.v1.p4runtime.PacketMetadata
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.v1.p4runtime.PacketIn(
    payload = _root_.com.google.protobuf.ByteString.EMPTY,
    metadata = _root_.scala.Seq.empty
  )
  implicit class PacketInLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.PacketIn]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.PacketIn](_l) {
    def payload: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.payload)((c_, f_) => c_.copy(payload = f_))
    def metadata: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[p4.v1.p4runtime.PacketMetadata]] = field(_.metadata)((c_, f_) => c_.copy(metadata = f_))
  }
  final val PAYLOAD_FIELD_NUMBER = 1
  final val METADATA_FIELD_NUMBER = 2
  def of(
    payload: _root_.com.google.protobuf.ByteString,
    metadata: _root_.scala.Seq[p4.v1.p4runtime.PacketMetadata]
  ): _root_.p4.v1.p4runtime.PacketIn = _root_.p4.v1.p4runtime.PacketIn(
    payload,
    metadata
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.PacketIn])
}
