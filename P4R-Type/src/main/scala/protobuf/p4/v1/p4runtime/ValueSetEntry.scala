// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.v1.p4runtime

/** ------------------------------------------------------------------------------
  * For writing and reading matches in a parser value set. A state transition
  * on an empty value set will never be taken. The number of matches must be at
  * most the size of the value set as specified by the size argument of the
  * value_set constructor in the P4 program.
  *
  * For Write Requests:
  *   - MODIFY will write the given matches in the repeated field to the value
  *     set.
  *   - INSERT and DELETE are not allowed.
  *
  * For Read Requests:
  *   - All matches for all value-set entries if value_set_id = 0
  *   - All matches of the value-set if a valid value_set_id is specified
  *   - The 'match' field must never be set in the ReadRequest
  */
@SerialVersionUID(0L)
final case class ValueSetEntry(
    valueSetId: _root_.scala.Int = 0,
    members: _root_.scala.Seq[p4.v1.p4runtime.ValueSetMember] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ValueSetEntry] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = valueSetId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
        }
      };
      members.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = valueSetId
        if (__v != 0) {
          _output__.writeUInt32(1, __v)
        }
      };
      members.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withValueSetId(__v: _root_.scala.Int): ValueSetEntry = copy(valueSetId = __v)
    def clearMembers = copy(members = _root_.scala.Seq.empty)
    def addMembers(__vs: p4.v1.p4runtime.ValueSetMember *): ValueSetEntry = addAllMembers(__vs)
    def addAllMembers(__vs: Iterable[p4.v1.p4runtime.ValueSetMember]): ValueSetEntry = copy(members = members ++ __vs)
    def withMembers(__v: _root_.scala.Seq[p4.v1.p4runtime.ValueSetMember]): ValueSetEntry = copy(members = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = valueSetId
          if (__t != 0) __t else null
        }
        case 2 => members
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(valueSetId)
        case 2 => _root_.scalapb.descriptors.PRepeated(members.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.v1.p4runtime.ValueSetEntry.type = p4.v1.p4runtime.ValueSetEntry
    // @@protoc_insertion_point(GeneratedMessage[p4.v1.ValueSetEntry])
}

object ValueSetEntry extends scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.ValueSetEntry] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.v1.p4runtime.ValueSetEntry] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.v1.p4runtime.ValueSetEntry = {
    var __valueSetId: _root_.scala.Int = 0
    val __members: _root_.scala.collection.immutable.VectorBuilder[p4.v1.p4runtime.ValueSetMember] = new _root_.scala.collection.immutable.VectorBuilder[p4.v1.p4runtime.ValueSetMember]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __valueSetId = _input__.readUInt32()
        case 18 =>
          __members += _root_.scalapb.LiteParser.readMessage[p4.v1.p4runtime.ValueSetMember](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.v1.p4runtime.ValueSetEntry(
        valueSetId = __valueSetId,
        members = __members.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.v1.p4runtime.ValueSetEntry] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.v1.p4runtime.ValueSetEntry(
        valueSetId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        members = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[p4.v1.p4runtime.ValueSetMember]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4RuntimeProto.javaDescriptor.getMessageTypes().get(28)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4RuntimeProto.scalaDescriptor.messages(28)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = p4.v1.p4runtime.ValueSetMember
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.v1.p4runtime.ValueSetEntry(
    valueSetId = 0,
    members = _root_.scala.Seq.empty
  )
  implicit class ValueSetEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.v1.p4runtime.ValueSetEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.v1.p4runtime.ValueSetEntry](_l) {
    def valueSetId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.valueSetId)((c_, f_) => c_.copy(valueSetId = f_))
    def members: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[p4.v1.p4runtime.ValueSetMember]] = field(_.members)((c_, f_) => c_.copy(members = f_))
  }
  final val VALUE_SET_ID_FIELD_NUMBER = 1
  final val MEMBERS_FIELD_NUMBER = 2
  def of(
    valueSetId: _root_.scala.Int,
    members: _root_.scala.Seq[p4.v1.p4runtime.ValueSetMember]
  ): _root_.p4.v1.p4runtime.ValueSetEntry = _root_.p4.v1.p4runtime.ValueSetEntry(
    valueSetId,
    members
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.v1.ValueSetEntry])
}
