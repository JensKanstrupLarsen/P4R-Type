// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.config.v1.p4types

/** @param uri
  *   the URI uniquely identifies the translation in order to enable the
  *   P4Runtime agent to perform value-mapping appropriately when required. It is
  *   recommended that the URI includes at least the P4 architecture name and the
  *   type name.
  */
@SerialVersionUID(0L)
final case class P4NewTypeTranslation(
    uri: _root_.scala.Predef.String = "",
    sdnType: p4.config.v1.p4types.P4NewTypeTranslation.SdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[P4NewTypeTranslation] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = uri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (sdnType.sdnBitwidth.isDefined) {
        val __value = sdnType.sdnBitwidth.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
      };
      if (sdnType.sdnString.isDefined) {
        val __value = sdnType.sdnString.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = uri
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      sdnType.sdnBitwidth.foreach { __v =>
        val __m = __v
        _output__.writeInt32(2, __m)
      };
      sdnType.sdnString.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withUri(__v: _root_.scala.Predef.String): P4NewTypeTranslation = copy(uri = __v)
    def getSdnBitwidth: _root_.scala.Int = sdnType.sdnBitwidth.getOrElse(0)
    def withSdnBitwidth(__v: _root_.scala.Int): P4NewTypeTranslation = copy(sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnBitwidth(__v))
    def getSdnString: p4.config.v1.p4types.P4NewTypeTranslation.SdnString = sdnType.sdnString.getOrElse(p4.config.v1.p4types.P4NewTypeTranslation.SdnString.defaultInstance)
    def withSdnString(__v: p4.config.v1.p4types.P4NewTypeTranslation.SdnString): P4NewTypeTranslation = copy(sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnString(__v))
    def clearSdnType: P4NewTypeTranslation = copy(sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.Empty)
    def withSdnType(__v: p4.config.v1.p4types.P4NewTypeTranslation.SdnType): P4NewTypeTranslation = copy(sdnType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = uri
          if (__t != "") __t else null
        }
        case 2 => sdnType.sdnBitwidth.orNull
        case 3 => sdnType.sdnString.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(uri)
        case 2 => sdnType.sdnBitwidth.map(_root_.scalapb.descriptors.PInt(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => sdnType.sdnString.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.config.v1.p4types.P4NewTypeTranslation.type = p4.config.v1.p4types.P4NewTypeTranslation
    // @@protoc_insertion_point(GeneratedMessage[p4.config.v1.P4NewTypeTranslation])
}

object P4NewTypeTranslation extends scalapb.GeneratedMessageCompanion[p4.config.v1.p4types.P4NewTypeTranslation] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.config.v1.p4types.P4NewTypeTranslation] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.config.v1.p4types.P4NewTypeTranslation = {
    var __uri: _root_.scala.Predef.String = ""
    var __sdnType: p4.config.v1.p4types.P4NewTypeTranslation.SdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __uri = _input__.readStringRequireUtf8()
        case 16 =>
          __sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnBitwidth(_input__.readInt32())
        case 26 =>
          __sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnString(__sdnType.sdnString.fold(_root_.scalapb.LiteParser.readMessage[p4.config.v1.p4types.P4NewTypeTranslation.SdnString](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.config.v1.p4types.P4NewTypeTranslation(
        uri = __uri,
        sdnType = __sdnType,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.config.v1.p4types.P4NewTypeTranslation] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.config.v1.p4types.P4NewTypeTranslation(
        uri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        sdnType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Int]]).map(p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnBitwidth(_))
            .orElse[p4.config.v1.p4types.P4NewTypeTranslation.SdnType](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[p4.config.v1.p4types.P4NewTypeTranslation.SdnString]]).map(p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnString(_)))
            .getOrElse(p4.config.v1.p4types.P4NewTypeTranslation.SdnType.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4TypesProto.javaDescriptor.getMessageTypes().get(24)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4TypesProto.scalaDescriptor.messages(24)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = p4.config.v1.p4types.P4NewTypeTranslation.SdnString
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.p4.config.v1.p4types.P4NewTypeTranslation.SdnString
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.config.v1.p4types.P4NewTypeTranslation(
    uri = "",
    sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.Empty
  )
  sealed trait SdnType extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isSdnBitwidth: _root_.scala.Boolean = false
    def isSdnString: _root_.scala.Boolean = false
    def sdnBitwidth: _root_.scala.Option[_root_.scala.Int] = _root_.scala.None
    def sdnString: _root_.scala.Option[p4.config.v1.p4types.P4NewTypeTranslation.SdnString] = _root_.scala.None
  }
  object SdnType {
    @SerialVersionUID(0L)
    case object Empty extends p4.config.v1.p4types.P4NewTypeTranslation.SdnType {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class SdnBitwidth(value: _root_.scala.Int) extends p4.config.v1.p4types.P4NewTypeTranslation.SdnType {
      type ValueType = _root_.scala.Int
      override def isSdnBitwidth: _root_.scala.Boolean = true
      override def sdnBitwidth: _root_.scala.Option[_root_.scala.Int] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class SdnString(value: p4.config.v1.p4types.P4NewTypeTranslation.SdnString) extends p4.config.v1.p4types.P4NewTypeTranslation.SdnType {
      type ValueType = p4.config.v1.p4types.P4NewTypeTranslation.SdnString
      override def isSdnString: _root_.scala.Boolean = true
      override def sdnString: _root_.scala.Option[p4.config.v1.p4types.P4NewTypeTranslation.SdnString] = Some(value)
      override def number: _root_.scala.Int = 3
    }
  }
  @SerialVersionUID(0L)
  final case class SdnString(
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SdnString] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        unknownFields.writeTo(_output__)
      }
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: p4.config.v1.p4types.P4NewTypeTranslation.SdnString.type = p4.config.v1.p4types.P4NewTypeTranslation.SdnString
      // @@protoc_insertion_point(GeneratedMessage[p4.config.v1.P4NewTypeTranslation.SdnString])
  }
  
  object SdnString extends scalapb.GeneratedMessageCompanion[p4.config.v1.p4types.P4NewTypeTranslation.SdnString] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.config.v1.p4types.P4NewTypeTranslation.SdnString] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.config.v1.p4types.P4NewTypeTranslation.SdnString = {
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      p4.config.v1.p4types.P4NewTypeTranslation.SdnString(
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.config.v1.p4types.P4NewTypeTranslation.SdnString] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        p4.config.v1.p4types.P4NewTypeTranslation.SdnString(
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = p4.config.v1.p4types.P4NewTypeTranslation.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = p4.config.v1.p4types.P4NewTypeTranslation.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = p4.config.v1.p4types.P4NewTypeTranslation.SdnString(
    )
    implicit class SdnStringLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.P4NewTypeTranslation.SdnString]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.config.v1.p4types.P4NewTypeTranslation.SdnString](_l) {
    }
    def of(
    ): _root_.p4.config.v1.p4types.P4NewTypeTranslation.SdnString = _root_.p4.config.v1.p4types.P4NewTypeTranslation.SdnString(
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[p4.config.v1.P4NewTypeTranslation.SdnString])
  }
  
  implicit class P4NewTypeTranslationLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.P4NewTypeTranslation]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.config.v1.p4types.P4NewTypeTranslation](_l) {
    def uri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.uri)((c_, f_) => c_.copy(uri = f_))
    def sdnBitwidth: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.getSdnBitwidth)((c_, f_) => c_.copy(sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnBitwidth(f_)))
    def sdnString: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.P4NewTypeTranslation.SdnString] = field(_.getSdnString)((c_, f_) => c_.copy(sdnType = p4.config.v1.p4types.P4NewTypeTranslation.SdnType.SdnString(f_)))
    def sdnType: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.P4NewTypeTranslation.SdnType] = field(_.sdnType)((c_, f_) => c_.copy(sdnType = f_))
  }
  final val URI_FIELD_NUMBER = 1
  final val SDN_BITWIDTH_FIELD_NUMBER = 2
  final val SDN_STRING_FIELD_NUMBER = 3
  def of(
    uri: _root_.scala.Predef.String,
    sdnType: p4.config.v1.p4types.P4NewTypeTranslation.SdnType
  ): _root_.p4.config.v1.p4types.P4NewTypeTranslation = _root_.p4.config.v1.p4types.P4NewTypeTranslation(
    uri,
    sdnType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.config.v1.P4NewTypeTranslation])
}
