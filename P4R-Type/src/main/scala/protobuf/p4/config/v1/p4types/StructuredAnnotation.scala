// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package p4.config.v1.p4types

/** @param sourceLocation
  *   Optional. Location of the '&#64;' symbol of this annotation in the source code.
  */
@SerialVersionUID(0L)
final case class StructuredAnnotation(
    name: _root_.scala.Predef.String = "",
    body: p4.config.v1.p4types.StructuredAnnotation.Body = p4.config.v1.p4types.StructuredAnnotation.Body.Empty,
    sourceLocation: _root_.scala.Option[p4.config.v1.p4types.SourceLocation] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[StructuredAnnotation] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (body.expressionList.isDefined) {
        val __value = body.expressionList.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (body.kvPairList.isDefined) {
        val __value = body.kvPairList.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sourceLocation.isDefined) {
        val __value = sourceLocation.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      body.expressionList.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      body.kvPairList.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sourceLocation.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): StructuredAnnotation = copy(name = __v)
    def getExpressionList: p4.config.v1.p4types.ExpressionList = body.expressionList.getOrElse(p4.config.v1.p4types.ExpressionList.defaultInstance)
    def withExpressionList(__v: p4.config.v1.p4types.ExpressionList): StructuredAnnotation = copy(body = p4.config.v1.p4types.StructuredAnnotation.Body.ExpressionList(__v))
    def getKvPairList: p4.config.v1.p4types.KeyValuePairList = body.kvPairList.getOrElse(p4.config.v1.p4types.KeyValuePairList.defaultInstance)
    def withKvPairList(__v: p4.config.v1.p4types.KeyValuePairList): StructuredAnnotation = copy(body = p4.config.v1.p4types.StructuredAnnotation.Body.KvPairList(__v))
    def getSourceLocation: p4.config.v1.p4types.SourceLocation = sourceLocation.getOrElse(p4.config.v1.p4types.SourceLocation.defaultInstance)
    def clearSourceLocation: StructuredAnnotation = copy(sourceLocation = _root_.scala.None)
    def withSourceLocation(__v: p4.config.v1.p4types.SourceLocation): StructuredAnnotation = copy(sourceLocation = Option(__v))
    def clearBody: StructuredAnnotation = copy(body = p4.config.v1.p4types.StructuredAnnotation.Body.Empty)
    def withBody(__v: p4.config.v1.p4types.StructuredAnnotation.Body): StructuredAnnotation = copy(body = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => body.expressionList.orNull
        case 3 => body.kvPairList.orNull
        case 4 => sourceLocation.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => body.expressionList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => body.kvPairList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => sourceLocation.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: p4.config.v1.p4types.StructuredAnnotation.type = p4.config.v1.p4types.StructuredAnnotation
    // @@protoc_insertion_point(GeneratedMessage[p4.config.v1.StructuredAnnotation])
}

object StructuredAnnotation extends scalapb.GeneratedMessageCompanion[p4.config.v1.p4types.StructuredAnnotation] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[p4.config.v1.p4types.StructuredAnnotation] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): p4.config.v1.p4types.StructuredAnnotation = {
    var __name: _root_.scala.Predef.String = ""
    var __sourceLocation: _root_.scala.Option[p4.config.v1.p4types.SourceLocation] = _root_.scala.None
    var __body: p4.config.v1.p4types.StructuredAnnotation.Body = p4.config.v1.p4types.StructuredAnnotation.Body.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 18 =>
          __body = p4.config.v1.p4types.StructuredAnnotation.Body.ExpressionList(__body.expressionList.fold(_root_.scalapb.LiteParser.readMessage[p4.config.v1.p4types.ExpressionList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __body = p4.config.v1.p4types.StructuredAnnotation.Body.KvPairList(__body.kvPairList.fold(_root_.scalapb.LiteParser.readMessage[p4.config.v1.p4types.KeyValuePairList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __sourceLocation = Option(__sourceLocation.fold(_root_.scalapb.LiteParser.readMessage[p4.config.v1.p4types.SourceLocation](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    p4.config.v1.p4types.StructuredAnnotation(
        name = __name,
        sourceLocation = __sourceLocation,
        body = __body,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[p4.config.v1.p4types.StructuredAnnotation] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      p4.config.v1.p4types.StructuredAnnotation(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        sourceLocation = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[p4.config.v1.p4types.SourceLocation]]),
        body = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[p4.config.v1.p4types.ExpressionList]]).map(p4.config.v1.p4types.StructuredAnnotation.Body.ExpressionList(_))
            .orElse[p4.config.v1.p4types.StructuredAnnotation.Body](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[p4.config.v1.p4types.KeyValuePairList]]).map(p4.config.v1.p4types.StructuredAnnotation.Body.KvPairList(_)))
            .getOrElse(p4.config.v1.p4types.StructuredAnnotation.Body.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = P4TypesProto.javaDescriptor.getMessageTypes().get(19)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = P4TypesProto.scalaDescriptor.messages(19)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = p4.config.v1.p4types.ExpressionList
      case 3 => __out = p4.config.v1.p4types.KeyValuePairList
      case 4 => __out = p4.config.v1.p4types.SourceLocation
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = p4.config.v1.p4types.StructuredAnnotation(
    name = "",
    sourceLocation = _root_.scala.None,
    body = p4.config.v1.p4types.StructuredAnnotation.Body.Empty
  )
  sealed trait Body extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isExpressionList: _root_.scala.Boolean = false
    def isKvPairList: _root_.scala.Boolean = false
    def expressionList: _root_.scala.Option[p4.config.v1.p4types.ExpressionList] = _root_.scala.None
    def kvPairList: _root_.scala.Option[p4.config.v1.p4types.KeyValuePairList] = _root_.scala.None
  }
  object Body {
    @SerialVersionUID(0L)
    case object Empty extends p4.config.v1.p4types.StructuredAnnotation.Body {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class ExpressionList(value: p4.config.v1.p4types.ExpressionList) extends p4.config.v1.p4types.StructuredAnnotation.Body {
      type ValueType = p4.config.v1.p4types.ExpressionList
      override def isExpressionList: _root_.scala.Boolean = true
      override def expressionList: _root_.scala.Option[p4.config.v1.p4types.ExpressionList] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class KvPairList(value: p4.config.v1.p4types.KeyValuePairList) extends p4.config.v1.p4types.StructuredAnnotation.Body {
      type ValueType = p4.config.v1.p4types.KeyValuePairList
      override def isKvPairList: _root_.scala.Boolean = true
      override def kvPairList: _root_.scala.Option[p4.config.v1.p4types.KeyValuePairList] = Some(value)
      override def number: _root_.scala.Int = 3
    }
  }
  implicit class StructuredAnnotationLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.StructuredAnnotation]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, p4.config.v1.p4types.StructuredAnnotation](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def expressionList: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.ExpressionList] = field(_.getExpressionList)((c_, f_) => c_.copy(body = p4.config.v1.p4types.StructuredAnnotation.Body.ExpressionList(f_)))
    def kvPairList: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.KeyValuePairList] = field(_.getKvPairList)((c_, f_) => c_.copy(body = p4.config.v1.p4types.StructuredAnnotation.Body.KvPairList(f_)))
    def sourceLocation: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.SourceLocation] = field(_.getSourceLocation)((c_, f_) => c_.copy(sourceLocation = Option(f_)))
    def optionalSourceLocation: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[p4.config.v1.p4types.SourceLocation]] = field(_.sourceLocation)((c_, f_) => c_.copy(sourceLocation = f_))
    def body: _root_.scalapb.lenses.Lens[UpperPB, p4.config.v1.p4types.StructuredAnnotation.Body] = field(_.body)((c_, f_) => c_.copy(body = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val EXPRESSION_LIST_FIELD_NUMBER = 2
  final val KV_PAIR_LIST_FIELD_NUMBER = 3
  final val SOURCE_LOCATION_FIELD_NUMBER = 4
  def of(
    name: _root_.scala.Predef.String,
    body: p4.config.v1.p4types.StructuredAnnotation.Body,
    sourceLocation: _root_.scala.Option[p4.config.v1.p4types.SourceLocation]
  ): _root_.p4.config.v1.p4types.StructuredAnnotation = _root_.p4.config.v1.p4types.StructuredAnnotation(
    name,
    body,
    sourceLocation
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[p4.config.v1.StructuredAnnotation])
}
